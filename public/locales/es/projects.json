{
  "github": "Ver en Github",
  "sections": {
    "about": "Acerca de",
    "features": "Funcionalidades",
    "snip": "Fragmentos de código"
  },
  "stg": {
    "brief": "Componente React que detecta si una 'Sección' se superpone con una 'Ventana'",
    "desc": "Este componente sigue la sección que se superpone con la ventana a medida que el usuario se desplaza por las secciones secundarias. Admite desplazamiento horizontal y vertical y ofrece opciones personalizables para las dimensiones de la ventana y el desplazamiento.",
    "snips": {
      "useScrollTracking": "Aquí usamos el gancho 'useScrollPosition' para rastrear la posición de desplazamiento de la ventana a través de 'currPos'. Dependiendo de la propiedad 'orientation' del componente, establecemos los valores 'axis' y 'axisEnd' en consecuencia para manejar tanto el desplazamiento vertical como horizontal.\n\nLuego, recorremos las secciones y ejecutamos 'doesOverlap' para verificar si la sección se superpone con la ventana. Si lo hace, lo comparamos con la 'topMost' actual, y si es más alto, se convierte en el 'topMost'.\n\nFinalmente, llamamos a 'setScrolledTo' con el ID de la sección y la referencia del elemento."
    },
    "highlights": {
      "section": "sección",
      "sections": "secciones",
      "window": "ventana"
    },
    "info": "¡Este componente se utiliza en este mismo portafolio para resaltar la sección actual en la barra superior!"
  },
  "dcr": {
    "brief": "Un generador de personajes DnD altamente personalizable",
    "desc": "Un generador de personajes DnD altamente personalizable que utiliza React18, Stitches y Radix-UI primitivos, capaz de crear hasta 100 personajes en menos de 1 segundo. Las características incluyen generación de nombres con semilla aleatoria, antecedentes, estadísticas ajustables basadas en la comparación de padres, configuración de sexo y edad, y exportación a CSV con orden de encabezado personalizable.",
    "snips": {
      "CharacterContextProvider": "Este fragmento muestra el CharacterContextProvider, que es el núcleo de la lógica de generación de personajes. Demuestra patrones avanzados de React, incluyendo el uso integral de hooks (useState, useMemo, useReducer, hooks personalizados), API de Contexto para la gestión del estado, memoización para la optimización del rendimiento y cálculos de estado derivados. El proveedor gestiona todos los aspectos de un personaje, desde atributos básicos como el sexo y la edad hasta elementos más complejos como las estadísticas y la generación de nombres.",
      "CharacterGenPage": "El componente CharacterGenPage ilustra técnicas sofisticadas de React para manejar múltiples generaciones de personajes. Utiliza useCallback para memoizar la compleja función createGenForms, que genera dinámicamente componentes CharacterAccordionItem basados en la configuración actual. El hook useEffect asegura actualizaciones eficientes cuando cambia el número de personajes u otros ajustes clave. Este componente demuestra cómo manejar la generación dinámica de componentes y la gestión de estado de manera eficiente.",
      "CharacterGenSettings": "CharacterGenSettings demuestra una gestión compleja del estado en una interfaz de configuración. Utiliza múltiples hooks useState para gestionar varias configuraciones, useEffect para sincronizar el estado local y global, y useMemo para optimizar el renderizado de elementos de UI complejos como diálogos. El componente también muestra la integración de componentes de UI personalizados y diálogos, proporcionando una experiencia de configuración rica e interactiva para el usuario."
    }
  }
}
